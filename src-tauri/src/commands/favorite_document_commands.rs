use crate::models::FavoriteDocument;
use crate::services::{ConvexSyncService, DatabaseService};
use tauri::State;

// #[tauri::command]
// pub async fn add_favorite_document(
//     db: State<'_, DatabaseService>,
//     convex: State<'_, ConvexSyncService>,
//     document_id: String,
//     user_id: String,
//     is_premium: bool,
// ) -> Result<String, String> {
//     let favorite_document = FavoriteDocument {
//         id: String::new(), // Will be generated by the database
//         document_id,
//         user_id,
//     };

//     let id = db.create_favorite_document(&favorite_document).await.map_err(|e| e.to_string())?;

//     if is_premium {
//         convex.sync_favorite_document(&favorite_document).await.map_err(|e| e.to_string())?;
//     }

//     Ok(id)
// }

// #[tauri::command]
// pub fn greet(name: &str) -> String {
//     format!("Hello, {}! You've been greeted from Rust!", name)
// }

// Add more favorite document related commands as needed
