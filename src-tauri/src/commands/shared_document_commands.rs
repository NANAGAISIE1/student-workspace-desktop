use crate::models::SharedDocument;
use crate::services::{DatabaseService, ConvexSyncService};
use tauri::State;

#[tauri::command]
pub async fn share_document(
    db: State<'_, DatabaseService>,
    convex: State<'_, ConvexSyncService>,
    document_id: String,
    user_id: String,
    is_premium: bool,
) -> Result<String, String> {
    let shared_document = SharedDocument {
        id: String::new(), // Will be generated by the database
        document_id,
        user_id,
    };

    let id = db.create_shared_document(&shared_document).await.map_err(|e| e.to_string())?;

    if is_premium {
        convex.sync_shared_document(&shared_document).await.map_err(|e| e.to_string())?;
    }

    Ok(id)
}

// Add more shared document related commands as needed